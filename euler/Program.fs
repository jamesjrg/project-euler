(*
problem 1

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
*)

//first version

let sum list =
    let rec accf list acc =
        match list with
        | [] -> acc
        | h :: t -> accf t (acc + h)
    accf list 0

let divisible_by_3_or_5 x = if x % 3 = 0 || x % 5 = 0 then true else false

let problem1 = sum [for x in [1..999] do if divisible_by_3_or_5 x then yield x]

// second version

let problem1_v2 = 
    let rec accf prev acc =
        let curr = prev + 1
        match curr with
        | _ when curr > 999 -> acc
        | _ when curr % 3 = 0 || curr % 5 = 0 -> accf curr (acc + curr)
        | _ -> accf curr acc
    accf 1 0

(*
problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*)

let problem2 = 
    let rec accf prev_prev prev acc =
        let curr = prev_prev + prev
        match curr with
        | _ when curr > 4000000 -> acc
        | _ when curr % 2 = 0 -> accf prev curr (acc + curr)
        | _ -> accf prev curr acc
    accf 1 2 2

(*
problem 3
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
*)


